{
  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File", "Serilog.Expressions", "TU.GTP.Logger.Extensions.Seri" ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft.AspNetCore": "Warning"
      }
    },

    "Enrich": [ "FromLogContext", "WithSanitizedEnricher" ],

    "WriteTo": [
      { "Name": "Console" },

      {
        "Name": "File",
        "Args": {
          "path": "../logs/Full_log_.txt",
          "outputTemplate": "Log.Logger - {Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}",
          "rollingInterval": "Day"
        }
      },

      {
        "Name": "Conditional",
        "Args": {
          "expression": "@l = 'Error'",
          "configureSink": [
            {
              "Name": "File",
              "Args": {
                "path": "../logs/Exceptions_.txt",
                "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}",
                "rollingInterval": "Day"
              }
            }
          ]
        }
      },

      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "Contains(SourceContext, 'WeatherForecastController')"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "../logs/Weather_log_.txt",
                  "outputTemplate": "Weather.Logger - {Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}",
                  "rollingInterval": "Day"
                }
              }
            ]
          }
        }
      },

      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "Contains(SourceContext, 'ApplicationController')"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "../logs/Application_log_.txt",
                  "outputTemplate": "Application.Logger - {Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}",
                  "rollingInterval": "Day"
                }
              }
            ]
          }
        }
      },

      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "Category = 'Custom'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "../logs/Custom_log_.txt",
                  "outputTemplate": "Custom.Logger - {Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}]-[{Application}] {Message}{NewLine}{Exception}",
                  "rollingInterval": "Day"
                }
              }
            ]
          }
        }
      }


    ]
  },
  "AllowedHosts": "*"
}
